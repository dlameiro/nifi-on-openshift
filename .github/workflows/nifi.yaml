name: Nifi Deployment

env:
  OPENSHIFT_SERVER: "${{ secrets.OPENSHIFT_SERVER }}"
  OPENSHIFT_TOKEN: "${{ secrets.OPENSHIFT_TOKEN }}"
  OPENSHIFT_NAMESPACE: "${{ secrets.OPENSHIFT_NAMESPACE }}"
  #TOKEN: "${{ secrets.TOKEN }}"
  APP_PORT: "8080"
  #IMAGE_NAME: "${{ github.repository }}"
  #IMAGE_REGISTRY: ghcr.io
  #IMAGE_TAGS: ""

on:
  workflow_dispatch:
  push:

    branches: [ "main" ]

jobs:

  openshift-ci-cd:
    name: Build and deploy to OpenShift
    runs-on: ubuntu-20.04
    environment: production

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set variables
      run: |
        repo_name=$(echo $GITHUB_REPOSITORY | awk -F/ '{print $2}')
        echo "repo_name=$repo_name" >> $GITHUB_ENV
        echo "owner=$GITHUB_REPOSITORY_OWNER" >> $GITHUB_ENV
    - name: Determine app name
      if: env.APP_NAME == ''
      run: |
        echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV
  
    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4

    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        
    - name: Run oc apply
      run: |
        cd deployment/overlays/replicas-2
        oc apply -k .
