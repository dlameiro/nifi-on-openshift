name: OpenShift

env:
  OPENSHIFT_SERVER: "${{ secrets.OPENSHIFT_SERVER }}"
  OPENSHIFT_TOKEN: "${{ secrets.OPENSHIFT_TOKEN }}"
  OPENSHIFT_NAMESPACE: "${{ secrets.OPENSHIFT_NAMESPACE }}"
  TOKEN: "${{ secrets.TOKEN }}"
  APP_PORT: "8080"
  IMAGE_NAME: "${{ github.repository }}"
  IMAGE_REGISTRY: ghcr.io
  IMAGE_TAGS: ""

on:
  workflow_dispatch:
  push:

    branches: [ "main" ]

jobs:

  openshift-ci-cd:
    name: Build and deploy to OpenShift
    runs-on: ubuntu-20.04
    environment: production

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set variables
      run: |
        repo_name=$(echo $GITHUB_REPOSITORY | awk -F/ '{print $2}')
        echo "repo_name=$repo_name" >> $GITHUB_ENV
        echo "owner=$GITHUB_REPOSITORY_OWNER" >> $GITHUB_ENV
    - name: Determine app name
      if: env.APP_NAME == ''
      run: |
        echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV
    - name: Determine image tags
      if: env.IMAGE_TAGS == ''
      run: |
        echo "IMAGE_TAGS=latest ${GITHUB_SHA::12}" | tee -a $GITHUB_ENV
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4

    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    - name: check oc
      run: |
        oc get secrets
        
    - name: Create and expose app
      id: deploy-and-expose
      uses: redhat-actions/oc-new-app@v1
      with:
        app_name: ${{ env.repo_name }}
        #image: ${{ steps.build-image.outputs.image }}
        #        image: ghcr.io/sergiosaavedraarizaga/test:main
        image: "${{ env.IMAGE_REGISTRY }}/${{ env.owner }}/${{ env.repo_name }}:main"
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        port: ${{ env.APP_PORT }}
        registry_hostname: ${{ env.IMAGE_REGISTRY }}
        registry_username: ${{ github.actor }}
        registry_password: ${{ env.TOKEN }}

    - name: Print application URL
      env:
        ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
        SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}
      run: |
        [[ -n ${{ env.ROUTE }} ]] || (echo "Determining application route failed in previous step"; exit 1)
        echo
        echo "======================== Your application is available at: ========================"
        echo ${{ env.ROUTE }}
        echo "==================================================================================="
        echo
        echo "Your app can be taken down with: \"oc delete all --selector='${{ env.SELECTOR }}'\""
